
## number of time slices

nts = seq(100, 10100, 100)

DATASETS = ["bears", "primates"]


for (i in 1:DATASETS.size()){
    DATASET = DATASETS[i]

	# Read in the observed phylogeny
	if (DATASET == "fish"){
	    observed_phylogeny = readTrees("data/actinopterygii/actinopt_full_1.tree")[1]
	}else if (DATASET == "primates"){
	    observed_phylogeny = readTrees("data/primates.tre")[1]
	}else if (DATASET == "bears"){
	    observed_phylogeny = readTrees("data/bears.tre")[1]
	}

    # initialize the moves and monitors vectors
    moves    = VectorMoves()
    monitors = VectorMonitors()

    ####################
    # Create the rates #
    ####################

    H <- 0.587405
    #rate_mean <- 0.08251888
    tree_length <- observed_phylogeny.treeLength()
    NUM_TOTAL_SPECIES <- observed_phylogeny.taxa().size()
    rate_mean <- (NUM_TOTAL_SPECIES - 2) / tree_length

    k <- 20
    eta <- 0.1

    speciation := fnDiscretizeDistribution( dnLognormal(ln(rate_mean), 3 * H), k )
    extinction := fnDiscretizeDistribution( dnLognormal(ln(rate_mean / 2.0), 3 * H), k )

    for (j in 1:nts.size()){
        nTimeSlices = nts[j]
        time_start = time()

        #### construct a variable for the tree drawn from a birth death process
        timetree ~ dnCDBDP( rootAge           = observed_phylogeny.rootAge(),
                            speciationRates   = speciation,
                            extinctionRates   = extinction,
                            Q                 = fnJC(k),
                            pi                = simplex(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
                            delta             = eta,
                            rho               = 1.0,
                            condition         = "time",
                            nTimeSlices       = nTimeSlices      )

        ### clamp the model with the "observed" tree
        timetree.clamp( observed_phylogeny )


        avg_speciation <- timetree.averageSpeciationRate()
        time_end = time()
        print("nTimeSlices = ", nTimeSlices, ". \tTime elapsed: ", (time_end - time_start) / (1000.0 ), " seconds." )

        ## PRINTING SPECIATION RATES TO FILE
        fname <- "output/ASP_Euler/BDS_DBRM_" + DATASET + "_" + nTimeSlices + ".log"

        print("Branch", sep = "", file = fname,append = FALSE)
        for ( i in 1:avg_speciation.size() ) {
          print("\tavg_lambda[",i,"]", sep= "", file = fname, append = TRUE)
        }
        print("\n", sep = "", file = fname, append = TRUE)
        print("Rate", sep = "",file = fname, append = TRUE)
        for ( i in 1:avg_speciation.size() ) {
          print("\t",avg_speciation[i], sep= "", file = fname, append=TRUE)
        }
        print("\n", sep="", file = fname, append=TRUE)

    }   
}

