################################################################################
#
# RevBayes Example: Bayesian inference of diversification rates under a
#                   conditioned birth-death-shift model
#
#
# authors: Sebastian Hoehna
#
################################################################################

#######################
# Reading in the Data #
#######################

# Read in the observed phylogeny
observed_phylogeny <- readTrees("data/bears.tre")[1]

# Get the names of the taxa in the tree and the age of the tree. We need these later on.
taxa <- observed_phylogeny.taxa()
root <- observed_phylogeny.rootAge()
tree_length <- observed_phylogeny.treeLength()


# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

# Global parameters for our analysis
NUM_TOTAL_SPECIES     = 8
NUM_RATE_CATEGORIES   = 4
H = 0.587405
NUM_TIME_SLICES = args[1]


####################
# Create the rates #
####################
speciation <- [0.1, 0.3, 0.1, 0.3]

extinction <- [0.05, 0.10, 0.15, 0.20]
eta <- 0.1

rate_cat_probs <- simplex( rep(1, NUM_RATE_CATEGORIES) )

### rho is the probability of sampling species at the present
### fix this to 367/367, since there are ~367 described species of bears
### and we have sampled 367
rho <- observed_phylogeny.ntips() / NUM_TOTAL_SPECIES

#### construct a variable for the tree drawn from a birth death process
timetree ~ dnCDBDP( rootAge           = root,
                    speciationRates   = speciation,
                    extinctionRates   = extinction,
                    Q                 = fnJC(NUM_RATE_CATEGORIES),
                    delta             = eta,
                    pi                = rate_cat_probs,
                    nTimeSlices       = NUM_TIME_SLICES,
                    rho               = rho,
                    condition         = "survival" )

### clamp the model with the "observed" tree
timetree.clamp(observed_phylogeny)

#############
# The Model #
#############

### workspace model wrapper ###
mymodel = model(speciation)

### set up the monitors that will output parameter values to file and screen
monitors.append( mnScreen(printgen=10, eta ) )
fname <- "output/bears_scm_" + NUM_TIME_SLICES + ".log"
monitors.append( mnStochasticBranchRate(cdbdp=timetree, printgen=1, filename=fname ))
#monitors.append( mnModel(filename="output/primates_BDS_nomoves.log",printgen=1, separator = TAB) )


################
# The Analysis #
################

### workspace mcmc
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

### run the MCMC
mymcmc.run(generations=50000, tuningInterval=200)

## quit ##
q()
